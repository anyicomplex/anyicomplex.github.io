<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on anyicomplex&#39;s Blog</title>
    <link>https://anyicomplex.github.io/en/posts/</link>
    <description>Recent content in Posts on anyicomplex&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2021 - 2022 © anyicomplex</copyright>
    <lastBuildDate>Tue, 12 Apr 2022 05:51:11 -0400</lastBuildDate><atom:link href="https://anyicomplex.github.io/en/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Farewell Forever</title>
      <link>https://anyicomplex.github.io/en/posts/farewell-forever/</link>
      <pubDate>Tue, 12 Apr 2022 05:51:11 -0400</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/farewell-forever/</guid>
      <description>Because of some force majeure, I will withdraw from the internet for a period of time, may come back someday, or may not foreover.
I&amp;rsquo;m very sorry for not fulfilling my commitment to the blog.
GOODBYE.</description>
    </item>
    
    <item>
      <title>从硬件到云服务——计算机平台的演化</title>
      <link>https://anyicomplex.github.io/en/posts/from-hardware-to-cloud-services-the-evolution-of-computer-platforms/</link>
      <pubDate>Wed, 23 Mar 2022 09:14:06 -0400</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/from-hardware-to-cloud-services-the-evolution-of-computer-platforms/</guid>
      <description>前言 我认为，程序员，就是在计算机平台上工作，利用计算机平台来处理需求的职业。
计算机平台并非一成不变的，截至目前，主流的计算机平台至少已经发展了四代。我的分析如下：
第一代：硬件 早期的 Unix 系统是连同源码一起发售的。那时候，一台计算机的成本和售价，硬件占了绝大多数，没人意识到 Unix 源码的价值。
各个硬件平台的汇编语言不同，于是出现了 C 语言等高级编程语言，用于解决这个问题。
然而，C 语言对于早期的计算机而言也是非常奢侈的存在，那时候只有大型机才有足够的性能运行 C 语言写成的 Unix。
于是，那时候的程序员们，多数用着汇编语言，在不同的硬件平台（多数没有操作系统）上工作，他们的程序多数时候无法不经修改地跨越硬件平台。
第二代：操作系统 “操作系统”这个概念随着 DOS 系统的大获成功席卷了整个 IT 行业。
随着硬件性能的提高和成本的降低，C 语言、Basic 和 Pascal 等高级编程语言得以普及，BSD 和 Linux 也得益于 C 语言，与硬件解耦。
各个操作系统的可执行文件格式不同，哪怕是针对同一种硬件平台，为不同操作系统编译的可执行文件也无法兼容，为了解决这个问题，出现了 Java 等跨操作系统的编程语言。
然而，Java 对于当时的计算机而言也是非常奢侈的存在，大多数时候计算机没有足够的资源良好的运行 Java。
于是，那时候的程序员们，多数用着高级编程语言，在不同的操作系统上工作，他们的程序多数时候无法不经修改地跨越操作系统平台。
后来，硬件性能进一步提高、成本进一步降低，让高度封装的跨操作系统 C/C++ 库成为可能，Java 等编程语言重现辉煌。
从此，编写跨操作系统程序成为程序员的必备技能。
第三代：浏览器 随着硬件性能的进一步提高、成本进一步降低，互联网 3.0 时代到来了，Web 开发者对操作系统的利用能力也随着浏览器能力的增强进一步增强。
于是，B/S 架构大行其道，基于浏览器的桌面应用开发框架（如 Electron.js）和移动应用开发框架（如 React.js）也随之兴起，从而极大的压榨了直接基于操作系统平台的本地 APP 的生存空间，浏览器也正式成为了一代计算机平台。
从此，编写 Web 前端程序也成为程序员的必备技能。
第四代：云服务 随着硬件性能的进一步提高、成本进一步降低，普通用户能享受到的网络带宽越来越大、延迟越来越低，于是很多公司把原本应该在用户设备上运行的程序搬到了自己的服务器上，以“云服务”的形式提供给用户。
这样做既能降低适配多不同操作系统所带来的成本（后端程序要适配的操作系统只有公司服务器上的系统），又能提供更好的服务，不必受制于用户设备的配置。 这是目前最新一代的计算机平台，已经得到了非常广泛的应用，而且仍在高速发展中。
分析 并不是说新的计算机平台出现，旧的计算机平台就会被取代，因为后来出现的平台是基于前面的平台的。
 嵌入式工程师所要面对的多数时候是硬件平台，少数时候是操作系统平台，和几十年前一样。 浏览器 APP 目前还无法摆脱“臃肿”的标签，而且很多用户更偏爱本地 APP，因此大多数本地 APP 开发者很长时间内还不至于失业。 云服务的基础是服务器上运行服务的操作系统，后端程序也属于本地 APP 的范畴。  计算机平台的演化，基础是硬件性能的提高和成本的降低，每次出现的新平台都是对旧平台部分问题的最优解。</description>
    </item>
    
    <item>
      <title>Linux 发行版推荐</title>
      <link>https://anyicomplex.github.io/en/posts/linux-distro-recommendations/</link>
      <pubDate>Wed, 23 Mar 2022 06:58:26 -0400</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/linux-distro-recommendations/</guid>
      <description>个人使用 面向 Linux 新手 其实 Linux 桌面系统的易用和桌面环境也有很大的关系，我建议新手使用 GNOME/KDE。
Debian Testing/Unstable 个人推荐指数：4/5
是否稳定版：否
官方包管理器：DPKG/APT
软件包格式：deb
默认软件：全部开源
官方软件仓库：开源/闭源分开存放
维护者：Debian 社区
个人评价：质量高、软件包多、开箱即用、资料丰富、精简可靠；上手难度较低。
默认不带闭源固件，安装这些固件对新手而言有一定的门槛。
Stable 源软件包太旧，一般用于服务器，个人使用建议换 Testing/Unstable 源（滚动更新）。
Fedora Workstation 个人推荐指数：3/5
是否稳定版：否
官方包管理器：RPM/Yum/DNF
软件包格式：rpm
默认软件：全部开源
官方软件仓库：开源/闭源分开存放
维护者：Red Hat 公司
个人评价：质量高、软件包多、开箱即用、资料丰富；上手难度低。
相比 Debian 稍显臃肿。
若要满足日常使用，需要配置第三方软件源，对新手而言有一定的门槛。
openSUSE Tumbleweed 个人推荐指数：4/5
是否稳定版：否
官方包管理器：RPM/Zypper
软件包格式：rpm
默认软件：部分开源
官方软件仓库：开源/闭源分开存放
维护者：SUSE 公司
个人评价：质量高、软件包多、开箱即用、资料丰富、配置方便（YaST 久负盛名）；上手难度低。
有稳定版（openSUSE Leap），但个人使用建议用滚动版（稳定版软件包会比较旧）。
Manjaro 个人推荐指数：4/5
是否稳定版：否
官方包管理器：Pacman/Pamac
软件包格式：pkg.tar.xz/pkg.tar.zst
默认软件：部分开源
官方软件仓库：开源/闭源混合存放
维护者：Manjaro 社区
个人评价：质量高、软件包多、开箱即用、资料丰富；上手难度低。
自带显卡驱动工具，对安装显卡驱动友好。
和 Arch Linux 一脉相承，可能是软件包最多的 Linux 发行版，而且比 Arch Linux 稳定。</description>
    </item>
    
    <item>
      <title>真正意义上的杂记 5</title>
      <link>https://anyicomplex.github.io/en/posts/miscellaneous-note-5/</link>
      <pubDate>Tue, 22 Mar 2022 10:53:38 -0400</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/miscellaneous-note-5/</guid>
      <description>为东航客机的死难者默哀。
希望死难者家属能得到应有的赔偿，造成此事的相关涉事人员得到应有的处罚。
希望这样的人间惨剧不再发生。</description>
    </item>
    
    <item>
      <title>针对本博客的翻译计划</title>
      <link>https://anyicomplex.github.io/en/posts/translation-plan-for-this-blog/</link>
      <pubDate>Tue, 22 Mar 2022 10:53:38 -0400</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/translation-plan-for-this-blog/</guid>
      <description>若无特殊情况，将在 2022-04-04-12:00:00（GMT+8:00） 之前对本博客的所有简体中文文本内容提供繁体中文和英文的翻译。</description>
    </item>
    
    <item>
      <title>停更博客 11 天致歉</title>
      <link>https://anyicomplex.github.io/en/posts/apologize-for-stop-blogging-last-11-days/</link>
      <pubDate>Tue, 22 Mar 2022 10:11:40 -0400</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/apologize-for-stop-blogging-last-11-days/</guid>
      <description>若无特殊说明，本文中日期、时间的时区皆为北京时间（GMT+08:00）。
致歉正文 从 2022-03-11 到 2022-03-22，我停更了 11 天博客（之前缺更的博客也没补上）。
首先，无论有什么理由，我必须为此事道歉。
理由：
 1.工作繁忙+身体不适，没有足够的精力写博客。 2.自己的懒惰。明明有精力编程，却没精力写博客？  清点缺更的博文 2022-02-09，我翻新了博客，制定了如下规划：
 至少每周更新两篇 每周、每月做个人/工作室项目总结和下一步规划 现进一步明确如下： 至少每周更新两篇 IT 相关，预计阅读时间（页眉可看）超过 1 分钟的博客 每周、每月做个人/工作室项目总结和下一步规划  根据此规划，清点缺更博客如下：
 2022-02-07&amp;hellip;2022-02-13
博客 * 1 2022-02-14&amp;hellip;2022-02-20
博客 * 1 2022-02-28&amp;hellip;2022-03-06
周总结 * 1
月总结 * 1 2022-03-07&amp;hellip;2022-03-13
博客 * 2
周总结 * 1 2022-03-14&amp;hellip;2022-03-20
博客 * 2
周总结 * 1 合计
博客 * 6
周总结 * 3
月总结 * 1  将在本周结束前全部补上。</description>
    </item>
    
    <item>
      <title>对“世界多极化”的展望</title>
      <link>https://anyicomplex.github.io/en/posts/perspectives-on-world-multipolarity/</link>
      <pubDate>Thu, 10 Mar 2022 21:42:48 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/perspectives-on-world-multipolarity/</guid>
      <description>前言 有人提出“世界正在走向多极化”的观点，这个观点我十分认同。
我认为，形成“世界多极化”的局面是必然趋势，但这种局面是会在几十年后还是上百年后形成，我就不清楚了。
本人不才，在此斗胆展望，大概率说的都是错的，还请各位见谅。
正文 北美洲、澳洲 当前的世界是由美国主导的“单极世界”。我认为，“世界多极化”后的美国仍然会是其中最强大的“一极”，引领北美洲、澳洲地区发展。
欧洲 这次乌克兰和俄罗斯的战争已经充分暴露了俄罗斯在军事方面的外强中干，因此我认为俄罗斯不会是“多极世界”中的“一极”——无论从经济方面还是军事方面，都无法达到成为“一极”的标准。
我认为，未来大概率会出现的局面是：俄罗斯成功转型民主国家并加入欧盟，届时北约解散，欧盟正式成为“多极世界”的“一极”。
东亚 我认为，未来的东亚势必走向联合（不一定会形成类似欧盟的经济组织，但一定会有经济上的自由贸易区；不一定会形成类似北约的军事组织，但一定会有军事上的同盟关系）。在那之前，日本会成为“多极世界”的一极。
东亚的联合在经济、文化上都有基础，目前最大的阻力是极权/威权政治（北朝鲜/中国大陆）。
我认为，就国家体量而言，如果中国能从极权/威权政治的阴影里走出来，未来大概率能够重新走上巅峰，引领东亚发展。届时，中日韩三国所组成的“东亚联合”会是“多极世界”中的“一极”。
南亚 我认为印度会成为“一极”，在走出种性制度的阴影后。
东南亚 无论是在经济还是政治方面，都很有潜力。我认为，虽然目前还没有国家明显的引领整个地区发展，但未来大概率会出现成为“一极”的力量。
中亚、西亚、北非 政治、文化因素过于复杂，我认为这些地区难以出现成为“一极”的力量。
撒哈拉以南非洲 长期以来饱受战乱影响，没能出现强国，或形成强有力的联合。我认为，虽然当前局势并不明朗，但这段历史进程总有走完的一天。
也许未来某天会出现成为“一极”的力量。
拉丁美洲 政治、经济的情况介于东亚和撒哈拉以南非洲之间，我认为比较有潜力成为“一极”的国家有巴西、墨西哥和智利。
感想 其实按当前的农业技术和“经济全球化”的影响，本不该出现饥荒，出现饥荒一定是政治因素。
瘟疫、战争、饥荒和死亡总是如影随形，希望近年的中国不要重演上世纪五十年代末到六十年代初发生的悲剧。</description>
    </item>
    
    <item>
      <title>真正意义上的杂记 4</title>
      <link>https://anyicomplex.github.io/en/posts/miscellaneous-note-4/</link>
      <pubDate>Tue, 08 Mar 2022 01:08:57 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/miscellaneous-note-4/</guid>
      <description>有感而发，大哭一场，吟诗一首：
《硕鼠》
先秦·佚名
硕鼠硕鼠，无食我黍！
三岁贯汝，莫我肯顾。
逝将去汝，适彼乐土。
乐土乐土，爰得我所。
硕鼠硕鼠，无食我麦！
三岁贯汝，莫我肯德。
逝将去汝，适彼乐国。
乐国乐国，爰得我直。
硕鼠硕鼠，无食我苗！
三岁贯汝，莫我肯劳。
逝将去汝，适彼乐郊。
乐郊乐郊，谁之永号？</description>
    </item>
    
    <item>
      <title>“铁链节”快乐</title>
      <link>https://anyicomplex.github.io/en/posts/happy-chain-festival/</link>
      <pubDate>Mon, 07 Mar 2022 22:06:18 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/happy-chain-festival/</guid>
      <description>图源： https://chinadigitaltimes.net/chinese/677893.html</description>
    </item>
    
    <item>
      <title>真正意义上的杂记 3</title>
      <link>https://anyicomplex.github.io/en/posts/miscellaneous-note-3/</link>
      <pubDate>Mon, 07 Mar 2022 02:17:23 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/miscellaneous-note-3/</guid>
      <description>我宣布，从现在起，我，安怡，正式回坑 Object Pascal！
而且现在有开源的编译器可以用了！
虽然这个编译器应该不如 Embarcadero 出的官方编译器功能完备，但对一个 Delphi 7 时代的遗民（我）而言，这支持的几十个平台就足够诱人了&amp;hellip;&amp;hellip;（那会只支持 DOS 和 Windows）</description>
    </item>
    
    <item>
      <title>操作系统推荐（服务器篇）</title>
      <link>https://anyicomplex.github.io/en/posts/operating-system-recommendations-for-servers/</link>
      <pubDate>Mon, 07 Mar 2022 00:00:21 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/operating-system-recommendations-for-servers/</guid>
      <description>虚拟机集群主机 Proxmox Virtual Environment （+3）基于 Debian 的 Linux 发行版，质量高。
（+2）开源免费。
（-1）没有良好的技术支持服务。
（-1）难以支撑大规模集群。
总分：3
评价：适合有一定技术但资金不足的初创团队使用。
VMware EXSi （+3）VMware 出品，质量高。
（-5）不开源不免费。
（+3）有优秀的付费技术支持服务。
（+2）支撑大规模集群毫无问题。
总分：3
评价：适合资金足够的团队使用。
OpenBSD （+3）最注重安全性的 BSD 发行版，质量高。
（+2）开源免费。
（+1）许可证宽松。
（-2）没有技术支持服务。
（-3）并非被设计用于虚拟机集群主机，虽然可以通过第三方软件实现。
总分：1
评价：适合技术水平高的团队或个人使用。
虚拟机集群客户机/物理机 Debian Stable （+3）老牌 Linux 发行版，以稳定著称，质量高。
（+2）开源免费。
（+1）保证了基本功能完备的情况下，系统资源占用较低。
（-2）没有技术支持服务。
总分：4
评价：适合有一定技术的个人、资金不足或不愿耗资在服务器系统的企业使用。
Slackware （+3）老牌 Linux 发行版，以稳定著称，质量高。
（+2）开源免费。
（+1）保证了基本功能完备的情况下，系统资源占用较低。
（-2）没有技术支持服务。
（-1）官方的包管理器不够现代化，无法处理依赖关系。
总分：3 评价：适合有一定技术的个人、资金不足或不愿耗资在服务器系统的企业使用。
Red Hat Enterprise Linux （+3）Red Hat 出品，质量高。
（-4）开源但不免费。
（+3）有优秀的付费技术支持服务。
（+1）Linux 服务器的事实标准。
总分：3
评价：适合资金足够的企业使用。
Rocky Linux （+3）RHEL 的一个克隆，质量高。</description>
    </item>
    
    <item>
      <title>操作系统推荐（个人使用篇）</title>
      <link>https://anyicomplex.github.io/en/posts/operating-system-recommendations-for-personal-use/</link>
      <pubDate>Sun, 06 Mar 2022 23:18:44 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/operating-system-recommendations-for-personal-use/</guid>
      <description>游戏发烧友 Windows 最适合用来玩游戏的 PC 操作系统是 Windows，没有之一。
先不提很多游戏、模拟器只支持 Windows，就连显卡驱动也往往是对 Windows 的支持最好（涉及到微软和各大显卡厂商的合作）。
设计师 macOS Apple 为了争取设计师群体在 macOS 下了工夫，和 Windows 相比，macOS 的用户体验更好，让设计师能专注工作而不用去管各种技术问题。
Windows Windows 适合有一定计算机基础的用户，强大的软件生态也使它能胜任设计工作站的工作。
.NET 程序员 Windows 没有 Visual Studio 的 .NET 就是没牙的老虎，在 Rider 超越 Visual Studio 前。
Classic Visual Basic 程序员 Windows Classic Visual Basic 只支持 Windows。
Objective-C/Swift 程序员 macOS Apple 的东西几乎只在它自己的生态圈能用。
其他程序员 滚动更新版的 Linux/FreeBSD 在对程序员的友好程度上，Linux 远超 Windows 和 macOS，正如 Windows 对游戏玩家友好，macOS 对设计师友好一样。
滚动更新是为了获取最新的程序库和开发工具，对开发者而言这是很重要的。
有开源洁癖/注重隐私保护的人 完全开源的 Linux/BSD 部分 Linux 并非完全开源，例如 Ubuntu，内置部分闭源软件。擦亮眼睛，选好发行版！</description>
    </item>
    
    <item>
      <title>Miscellaneous Note 2</title>
      <link>https://anyicomplex.github.io/en/posts/miscellaneous-note-2/</link>
      <pubDate>Wed, 02 Mar 2022 23:07:01 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/miscellaneous-note-2/</guid>
      <description>新头像（？）
请原谅我的渣画技，连个帽子都画不好XD
说起来就加了个帽子&amp;hellip;&amp;hellip;
加这个帽子的原因：如果可以的话，我希望将来有一天能到 Red Hat 去上班:D
然而，现在的我，除了编程啥也不会，编程水平也不咋地XP
照这样下去，我估计再过个十年八年也达不到那些大公司招聘的标准
只能认命，接受我自己是个废物的现实QAQ</description>
    </item>
    
    <item>
      <title>Miscellaneous Note 1</title>
      <link>https://anyicomplex.github.io/en/posts/miscellaneous-note-1/</link>
      <pubDate>Tue, 01 Mar 2022 19:40:44 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/miscellaneous-note-1/</guid>
      <description>I went to bed early last night and got up early this morning, so I thought I might as well do something since I was up early, so I used GIMP to draw a new avatar.
Not saving during drawing. Suddenly, GIMP crashed, together with the desktop, and then&amp;hellip; results of two hours, lost forever QwQ.
This thing told us, we should saving data during working in time, or encounter unexpected conditions, cannot do anything except cry&amp;hellip; Data is priceless!</description>
    </item>
    
    <item>
      <title>Blog Refurbishment 4</title>
      <link>https://anyicomplex.github.io/en/posts/blog-refurbishment-4/</link>
      <pubDate>Tue, 01 Mar 2022 19:15:44 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/blog-refurbishment-4/</guid>
      <description>Simply sorted out the blog posts, fixed the typography and part of statements with errors.</description>
    </item>
    
    <item>
      <title>Week Summary 20220227</title>
      <link>https://anyicomplex.github.io/en/posts/week-summary-20220227/</link>
      <pubDate>Mon, 28 Feb 2022 17:24:10 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/week-summary-20220227/</guid>
      <description>Maintained projects  gdx-dwt xdg-utils-java v1.1.3  Contributed projects  NONE  Next-step planning  Complete the Windows backend of gdx-dwt by the end of next week. Finish at least 1/3 of the game [Space Trail] demo by the end of next week.  Extra comments I didn&amp;rsquo;t expect win32 development without MFC to be so difficult, which directly led to not finishing the planned tasks. (Being busy lately is one of the reasons, even both blog posts and week summaries were not made up until the second Tuesday).</description>
    </item>
    
    <item>
      <title>Ultimate Trimming for C/C&#43;&#43; Programs Size</title>
      <link>https://anyicomplex.github.io/en/posts/ultimate-trimming-for-c-cpp-programs-size/</link>
      <pubDate>Mon, 28 Feb 2022 15:45:19 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/ultimate-trimming-for-c-cpp-programs-size/</guid>
      <description>Causes Program release has always been a major problem for programmers, especially in the distribution of applets.
If you wrote a small program with limited functionality, but it depends on a heavy runtime in dozens of megabytes, I believe that many users will not think it&amp;rsquo;s worth to use.
If you refute me with reasons like &amp;ldquo;hard disks are now at a cabbage price&amp;rdquo; or &amp;ldquo;network bandwidth is worthless now that we&amp;rsquo;re in the 5G era&amp;rdquo;, then please close this blog post immediately because it&amp;rsquo;s not written for you.</description>
    </item>
    
    <item>
      <title>Writing and Compiling win32 Programs under Linux</title>
      <link>https://anyicomplex.github.io/en/posts/writing-and-compiling-win32-programs-under-linux/</link>
      <pubDate>Mon, 28 Feb 2022 14:24:36 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/writing-and-compiling-win32-programs-under-linux/</guid>
      <description>The term &amp;ldquo;win32&amp;rdquo; in this article is the common name for winapi in mainland China programmers&#39; circles, not specifically for 32-bit winapi (not to mention 64-bit, we also calling the earlier 16-bit winapi &amp;ldquo;win32&amp;rdquo; since the appearance of 32-bit winapi).
Feasibility Thanks to the MinGW (Minimalist GNU for Windows) project, it is perfectly feasible to compile win32 applications as long as not involve higher-level packaging (MFC, WPF, etc.). (There are actually various tricks to use MFC and WPF, but I don&amp;rsquo;t recommend it, and if you want to do that, it might be better to use MSVC under Wine)</description>
    </item>
    
    <item>
      <title>Untitled</title>
      <link>https://anyicomplex.github.io/en/posts/untitled-1/</link>
      <pubDate>Fri, 25 Feb 2022 06:26:14 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/untitled-1/</guid>
      <description>I hope that the people of Ukraine will get through this disaster safely.
I hope the war will end sooner and not expand into a world war.
A moment of silence for the dead.</description>
    </item>
    
    <item>
      <title>Blog Refurbishment 3</title>
      <link>https://anyicomplex.github.io/en/posts/blog-refurbishment-3/</link>
      <pubDate>Sun, 20 Feb 2022 11:30:53 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/blog-refurbishment-3/</guid>
      <description>At the last time I&amp;rsquo;m blogging, I found that the background color of the highlighted code was beige, I didn&amp;rsquo;t like the color, so I changed it.
Then I updated the version of the theme.</description>
    </item>
    
    <item>
      <title>Xlib Programming Notes 1</title>
      <link>https://anyicomplex.github.io/en/posts/xlib-programming-notes-1/</link>
      <pubDate>Sun, 20 Feb 2022 11:02:21 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/xlib-programming-notes-1/</guid>
      <description> Be careful with the XGrabPointer and been prepared to force the program exit before using it (I was pitted today, and more than once QAQ)  </description>
    </item>
    
    <item>
      <title>Week Summary 20220220</title>
      <link>https://anyicomplex.github.io/en/posts/week-summary-20220220/</link>
      <pubDate>Sun, 20 Feb 2022 10:56:05 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/week-summary-20220220/</guid>
      <description>Maintained projects  gdx-dwt xdg-utils-java v1.1.3-rc1&amp;hellip;v1.1.3  Contributed projects  NONE  Next-step planning  Refine the Windows backend of gdx-dwt by the end of next week.  </description>
    </item>
    
    <item>
      <title>Some advice for C&#43;&#43; beginners</title>
      <link>https://anyicomplex.github.io/en/posts/some-advice-for-cpp-beginners/</link>
      <pubDate>Sat, 19 Feb 2022 09:33:19 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/some-advice-for-cpp-beginners/</guid>
      <description>Fundamentals   Learn C first before learning C++, master basic concepts such as stacks and piles, be comfortable with pointers and macros.
  Latest C++ features should not be learned yet, even if only for learning and not production, it is also recommended to use only long-term supported stable versions.
  Applications
  Don&amp;rsquo;t rush into advanced C++ features such as templates yet.
  Don&amp;rsquo;t look for a third-party library if it&amp;rsquo;s the same feature available in the STL (unless it&amp;rsquo;s really better than that part of the STL and has been maintained for a long time).</description>
    </item>
    
    <item>
      <title>Week Summary 20220213</title>
      <link>https://anyicomplex.github.io/en/posts/week-summary-20220213/</link>
      <pubDate>Sun, 13 Feb 2022 11:07:57 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/week-summary-20220213/</guid>
      <description>Maintained projects  gdx-bmfont v1.0.0&amp;hellip;v1.0.5 gdx-svmhelper v1.10.0-beta4 gdx-dwt xdg-utils-java v1.1.3-beta1&amp;hellip;v1.1.3-beta2  Contributed projects  NONE  Next-step planning  Advancing xdg-utils-java to a stable release next week. Refine the Linux backend of gdx-dwt by the end of next week.  </description>
    </item>
    
    <item>
      <title>Writing C-style Java Programs</title>
      <link>https://anyicomplex.github.io/en/posts/writing-c-style-java-programs/</link>
      <pubDate>Sun, 13 Feb 2022 08:52:46 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/writing-c-style-java-programs/</guid>
      <description>Feasibility Java is said to be a pure object-oriented programming language, so can you write procedural-oriented C-style code in Java?
There are no pointers in Java, but there are references, so the answer is obviously yes.
The difference in style Let&amp;rsquo;s start with two pieces of pseudo-code.
C style struct Foo foo; change_foo_value(&amp;amp;foo, 0); Java style Foo foo = new Foo(); foo.changeValue(0); This also shows the difference between the two design patterns, object-oriented and procedure-oriented.</description>
    </item>
    
    <item>
      <title>I am Back</title>
      <link>https://anyicomplex.github.io/en/posts/i-am-back/</link>
      <pubDate>Wed, 09 Feb 2022 06:18:18 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/i-am-back/</guid>
      <description>Sorry, I&amp;rsquo;m sorry, I&amp;rsquo;m so sorry, I broke my promise&amp;hellip;
Last time I said I would have a huge update, but I ended up writing one blog post&amp;hellip;
Even for Lunar New Year, I didn&amp;rsquo;t post a blog&amp;hellip;
A lot of things happened during this time&amp;hellip;
First, I got addicted to playing Mirage Realms (because it&amp;rsquo;s really fun :D)
Then, I decided to develop the game in Java and libGDX (contradicted myself, details) and did some related work (gdx-svmhelper and gdx-bmfont)</description>
    </item>
    
    <item>
      <title>Reasons to Use Linux</title>
      <link>https://anyicomplex.github.io/en/posts/reasons-to-use-linux/</link>
      <pubDate>Wed, 08 Dec 2021 08:17:44 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/reasons-to-use-linux/</guid>
      <description>1. Lightweight (x86_64 operating system for example, for daily use; so the distributions focused on lightweight that streamlining too many features are excluded)    Operating system Minimum CPU requirements Minimum memory requirements Minimum storage requirements     Windows 11 1 GHz * 2 4 GB 64 GB   Windows 10 1 GHz 2 GB 20 GB   Windows 7 1 GHz 2 GB 20 GB   Fedora 35 (GNOME) 2 GHz 2 GB 15 GB   Debian 11 (GNOME) 1 GHz 1 GB 10 GB    All referenced data come from the system&amp;rsquo;s official website</description>
    </item>
    
    <item>
      <title>Blog Refurbishment 2</title>
      <link>https://anyicomplex.github.io/en/posts/blog-refurbishment-2/</link>
      <pubDate>Wed, 08 Dec 2021 04:41:08 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/blog-refurbishment-2/</guid>
      <description>Recently finally was transferred to a position with a computer
First do something of my own at spare time between tasks
Idle is also idle, why not refurbish the blog :D
This time, almost all the places I think the details are not satisfactory in this theme have been modified, I also modified the home page
I think today is my birthday, I almost forgot it XD</description>
    </item>
    
    <item>
      <title>Blog Refurbishment 1</title>
      <link>https://anyicomplex.github.io/en/posts/blog-refurbishment-1/</link>
      <pubDate>Mon, 06 Dec 2021 06:56:16 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/blog-refurbishment-1/</guid>
      <description>Two months have passed and I finally remembered this blog again XD
So I&amp;hellip;modified the theme, refurbished a bit, and replaced the comment system from Utterances to Gitalk (of course, because of this, the original comments all no longer exists XP)
New theme: Diary
There will be a huge amount of new (quality-free) blog posts in the next while&amp;hellip;That&amp;rsquo;s probably it! Stay tuned!</description>
    </item>
    
    <item>
      <title>Words for those Want to Develop Game in Java</title>
      <link>https://anyicomplex.github.io/en/posts/words-for-those-want-to-develop-game-in-java/</link>
      <pubDate>Thu, 07 Oct 2021 02:23:11 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/words-for-those-want-to-develop-game-in-java/</guid>
      <description>Is Java suitable for developing games? My answer is: NO.
If you&amp;rsquo;re not focused on open source, established commercial solutions like Unity and GameMaker are obviously the best choices for you.
If you&amp;rsquo;re focused on open source, there are plenty of open source game engines out there (most of them written in C/C++) that are right up your alley. (Not listed here, please search in the major open source platforms by yourself)</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://anyicomplex.github.io/en/posts/hello-world/</link>
      <pubDate>Tue, 05 Oct 2021 04:33:30 -0500</pubDate>
      
      <guid>https://anyicomplex.github.io/en/posts/hello-world/</guid>
      <description>Theme: Github Style (Note: This is the theme used at the beginning of the blog, which has already replaced)
It will probably be a blog of diary nature :D</description>
    </item>
    
  </channel>
</rss>
