<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>个人简介 on 安怡的博客</title>
    <link>https://anyicomplex.github.io/</link>
    <description>Recent content in 个人简介 on 安怡的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>2021 - 2022 © anyicomplex</copyright>
    <lastBuildDate>Wed, 08 Dec 2021 04:03:38 -0500</lastBuildDate>
    
        <atom:link href="https://anyicomplex.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>操作系统推荐（个人使用篇）</title>
        <link>https://anyicomplex.github.io/posts/operating-system-recommendations-for-personal-use/</link>
        <pubDate>Sun, 06 Mar 2022 23:18:44 -0500</pubDate>
        
        <guid>https://anyicomplex.github.io/posts/operating-system-recommendations-for-personal-use/</guid>
        <description>安怡的博客 https://anyicomplex.github.io/posts/operating-system-recommendations-for-personal-use/ -&lt;h1 id=&#34;游戏发烧友&#34;&gt;游戏发烧友&lt;/h1&gt;
&lt;h2 id=&#34;windows&#34;&gt;Windows&lt;/h2&gt;
&lt;p&gt;最适合用来玩游戏的 PC 操作系统是 Windows，没有之一。&lt;br&gt;
先不提很多游戏、模拟器只支持 Windows，就连显卡驱动也往往是对 Windows 的支持最好（涉及到微软和各大显卡厂商的合作）。&lt;/p&gt;
&lt;h1 id=&#34;设计师&#34;&gt;设计师&lt;/h1&gt;
&lt;h2 id=&#34;macos&#34;&gt;macOS&lt;/h2&gt;
&lt;p&gt;Apple 为了争取设计师群体在 macOS 下了工夫，和 Windows 相比，macOS 的用户体验更好，让设计师能专注工作而不用去管各种技术问题。&lt;/p&gt;
&lt;h2 id=&#34;windows-1&#34;&gt;Windows&lt;/h2&gt;
&lt;p&gt;Windows 适合有一定计算机基础的用户，强大的软件生态也使它能胜任设计工作站的工作。&lt;/p&gt;
&lt;h1 id=&#34;net-程序员&#34;&gt;.NET 程序员&lt;/h1&gt;
&lt;h2 id=&#34;windows-2&#34;&gt;Windows&lt;/h2&gt;
&lt;p&gt;没有 Visual Studio 的 .NET 就是没牙的老虎，在 Rider 超越 Visual Studio 前。&lt;/p&gt;
&lt;h1 id=&#34;classic-visual-basic-程序员&#34;&gt;Classic Visual Basic 程序员&lt;/h1&gt;
&lt;h2 id=&#34;windows-3&#34;&gt;Windows&lt;/h2&gt;
&lt;p&gt;Classic Visual Basic 只支持 Windows。&lt;/p&gt;
&lt;h1 id=&#34;objective-cswift-程序员&#34;&gt;Objective-C/Swift 程序员&lt;/h1&gt;
&lt;h2 id=&#34;macos-1&#34;&gt;macOS&lt;/h2&gt;
&lt;p&gt;Apple 的东西几乎只在它自己的生态圈能用。&lt;/p&gt;
&lt;h1 id=&#34;其他程序员&#34;&gt;其他程序员&lt;/h1&gt;
&lt;h2 id=&#34;滚动更新版的-linuxfreebsd&#34;&gt;滚动更新版的 Linux/FreeBSD&lt;/h2&gt;
&lt;p&gt;在对程序员的友好程度上，Linux 远超 Windows 和 macOS，正如 Windows 对游戏玩家友好，macOS 对设计师友好一样。&lt;br&gt;
滚动更新是为了获取最新的程序库和开发工具，对开发者而言这是很重要的。&lt;/p&gt;
&lt;h1 id=&#34;有开源洁癖注重隐私保护的人&#34;&gt;有开源洁癖/注重隐私保护的人&lt;/h1&gt;
&lt;h2 id=&#34;完全开源的-linuxbsd&#34;&gt;完全开源的 Linux/BSD&lt;/h2&gt;
&lt;p&gt;部分 Linux 并非完全开源，例如 Ubuntu，内置部分闭源软件。擦亮眼睛，选好发行版！&lt;br&gt;
macOS 也属于 BSD 家族，但只有内核开源。&lt;/p&gt;
&lt;h1 id=&#34;注重安全性的人&#34;&gt;注重安全性的人&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;恕我直言，安全性高的系统所能起到的保护作用也十分有限，要想真正在赛博空间保护自己，请提升自己的信息安全技术水平。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;qubes-oshttpsqubes-osorg&#34;&gt;&lt;a href=&#34;https://qubes-os.org/&#34;&gt;Qubes OS&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;基于 Xen 虚拟化提高安全性，最注重安全性的 Linux 发行版之一。&lt;/p&gt;
&lt;h2 id=&#34;parrot-os-securityhttpsparrotsecorg&#34;&gt;&lt;a href=&#34;https://parrotsec.org/&#34;&gt;Parrot OS Security&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;基于 Debian Testing，和 &lt;a href=&#34;https://www.kali.org/&#34;&gt;Kali Linux&lt;/a&gt; 正好相反，是一个注重防御的渗透测试发行版。最注重安全性的 Linux 发行版之一。&lt;/p&gt;
&lt;h2 id=&#34;openbsdhttpswwwopenbsdorg&#34;&gt;&lt;a href=&#34;https://www.openbsd.org/&#34;&gt;OpenBSD&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;最注重安全性的 BSD 发行版。&lt;/p&gt;
&lt;h1 id=&#34;感想&#34;&gt;感想&lt;/h1&gt;
&lt;p&gt;我之后应该会再写一篇博客推荐 Linux 发行版的。&lt;/p&gt;
- https://anyicomplex.github.io/posts/operating-system-recommendations-for-personal-use/ - 2021 - 2022 © anyicomplex</description>
        </item>
    
    
    
        <item>
        <title>真正意义上的杂记 2</title>
        <link>https://anyicomplex.github.io/posts/miscellaneous-note-2/</link>
        <pubDate>Wed, 02 Mar 2022 23:07:01 -0500</pubDate>
        
        <guid>https://anyicomplex.github.io/posts/miscellaneous-note-2/</guid>
        <description>安怡的博客 https://anyicomplex.github.io/posts/miscellaneous-note-2/ -&lt;p&gt;新头像（？）&lt;br&gt;
请原谅我的渣画技，连个帽子都画不好XD&lt;br&gt;
&lt;img src=&#34;https://anyicomplex.github.io/images/avatar_new.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
说起来就加了个帽子&amp;hellip;&amp;hellip;&lt;br&gt;
加这个帽子的原因：如果可以的话，我希望将来有一天能到 Red Hat 去上班:D&lt;/p&gt;
&lt;p&gt;然而，现在的我，除了编程啥也不会，编程水平也不咋地XP&lt;br&gt;
照这样下去，我估计再过个十年八年也达不到那些大公司招聘的标准&lt;br&gt;
只能认命，接受我自己是个废物的现实QAQ&lt;/p&gt;
- https://anyicomplex.github.io/posts/miscellaneous-note-2/ - 2021 - 2022 © anyicomplex</description>
        </item>
    
    
    
        <item>
        <title>真正意义上的杂记 1</title>
        <link>https://anyicomplex.github.io/posts/miscellaneous-note-1/</link>
        <pubDate>Tue, 01 Mar 2022 19:40:44 -0500</pubDate>
        
        <guid>https://anyicomplex.github.io/posts/miscellaneous-note-1/</guid>
        <description>安怡的博客 https://anyicomplex.github.io/posts/miscellaneous-note-1/ -&lt;p&gt;昨晚睡得早，今早起床就早，想着既然起得早不如做点什么，就用 GIMP 画新头像。&lt;br&gt;
没有边画边保存。忽然，GIMP 崩了，连着桌面一起崩了，然后&amp;hellip;&amp;hellip;两小时的成果，就没了QwQ。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这件事情告诉我们，工作时要及时保存项目，否则遇到突发情况只能欲哭无泪&amp;hellip;&amp;hellip;数据无价！&lt;/strong&gt;&lt;/p&gt;
- https://anyicomplex.github.io/posts/miscellaneous-note-1/ - 2021 - 2022 © anyicomplex</description>
        </item>
    
    
    
        <item>
        <title>博客翻新 4</title>
        <link>https://anyicomplex.github.io/posts/blog-refurbishment-4/</link>
        <pubDate>Tue, 01 Mar 2022 19:15:44 -0500</pubDate>
        
        <guid>https://anyicomplex.github.io/posts/blog-refurbishment-4/</guid>
        <description>安怡的博客 https://anyicomplex.github.io/posts/blog-refurbishment-4/ -&lt;p&gt;简单的整理了一下博文，修整了排版和部分有错误的语句。&lt;/p&gt;
- https://anyicomplex.github.io/posts/blog-refurbishment-4/ - 2021 - 2022 © anyicomplex</description>
        </item>
    
    
    
        <item>
        <title>一周总结 20220227</title>
        <link>https://anyicomplex.github.io/posts/week-summary-20220227/</link>
        <pubDate>Mon, 28 Feb 2022 17:24:10 -0500</pubDate>
        
        <guid>https://anyicomplex.github.io/posts/week-summary-20220227/</guid>
        <description>安怡的博客 https://anyicomplex.github.io/posts/week-summary-20220227/ -&lt;h1 id=&#34;维护的项目&#34;&gt;维护的项目&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/anyicomplex/gdx-dwt&#34;&gt;gdx-dwt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/anyicomplex/xdg-utils-java&#34;&gt;xdg-utils-java&lt;/a&gt; v1.1.3&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参与的项目&#34;&gt;参与的项目&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;NONE&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;下一步规划&#34;&gt;下一步规划&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;下周结束前完善 gdx-dwt 的 Windows 后端部分。&lt;/li&gt;
&lt;li&gt;下周结束前至少完成游戏 [空间轨迹] demo 的 1/3。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;额外留言&#34;&gt;额外留言&lt;/h1&gt;
&lt;p&gt;我没料到不使用 MFC 的 win32 开发会如此艰难，这直接导致了没能完成规划的任务。（最近比较忙也是原因之一，甚至两篇博客和周总结都到了第二周的周二才补上。）&lt;br&gt;
我更没料到的是，普京居然真动手打乌克兰了&amp;hellip;&amp;hellip;我也没法为此做什么，自己也没什么钱，人民币又捐不出去，只好给朋友买了一份《这是我的战争》（几天前说什么七天之内的收益都捐给乌克兰来着，给朋友买是因为我很久以前就不玩 Steam 了）。希望世界还能和平吧。&lt;/p&gt;
- https://anyicomplex.github.io/posts/week-summary-20220227/ - 2021 - 2022 © anyicomplex</description>
        </item>
    
    
    
        <item>
        <title>对 C/C&#43;&#43; 程序体积的极致裁剪</title>
        <link>https://anyicomplex.github.io/posts/ultimate-trimming-for-c-cpp-programs-size/</link>
        <pubDate>Mon, 28 Feb 2022 15:45:19 -0500</pubDate>
        
        <guid>https://anyicomplex.github.io/posts/ultimate-trimming-for-c-cpp-programs-size/</guid>
        <description>安怡的博客 https://anyicomplex.github.io/posts/ultimate-trimming-for-c-cpp-programs-size/ -&lt;h1 id=&#34;起因&#34;&gt;起因&lt;/h1&gt;
&lt;p&gt;程序的分发一直是困扰各大程序员的老大难问题，尤其是在小程序的分发上。&lt;br&gt;
如果你只是写了个功能很有限的小程序，却要拖家带口 几十M 的运行时，我相信，用户一定会觉得不值得的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果你以“现在硬盘白菜价了”或者“都 5G 时代了，网络带宽早不值钱了”这种理由来反驳我，那么请立即关闭我的这篇博文，因为这不是写给你看的。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;方法&#34;&gt;方法&lt;/h1&gt;
&lt;h2 id=&#34;1动态调用运行时&#34;&gt;1.动态调用运行时&lt;/h2&gt;
&lt;p&gt;只要目标设备包含了程序所需的运行时和依赖库，就可以通过动态调用的方式缩小体积。&lt;/p&gt;
&lt;h3 id=&#34;nix&#34;&gt;*nix&lt;/h3&gt;
&lt;p&gt;这在 *nix 平台下不是问题，因为必定包含可用的 C/C++ 运行时，又在程序库方面做到了模块化，在使用包管理器的情况下只需要指定对应的依赖，否则就只能让用户手动去安装了。&lt;br&gt;
如果不想麻烦用户，又不使用包管理器，那么就只有减少依赖，只使用目标平台必定包含的库了。&lt;/p&gt;
&lt;h3 id=&#34;windows&#34;&gt;Windows&lt;/h3&gt;
&lt;p&gt;Windows 并没有做到程序库方面的模块化，除了一些基本的 C/C++ 运行时库，所以只有减少依赖一种方法。&lt;br&gt;
但如果要兼容老版本系统的话，必定包含的库就极其有限，甚至连部分基本的 C/C++ 运行时库也不是必定包含，这时候要么麻烦用户，要么就只能用老版本的运行时库了。&lt;/p&gt;
&lt;h4 id=&#34;1使用-visual-c-60&#34;&gt;1.使用 Visual C++ 6.0&lt;/h4&gt;
&lt;p&gt;用 VC6.0 编译出的 C/C++ 程序，运行时就只有 msvcrt.dll 这一个库，而这个库从 Windows 2000 起就必定包含在系统中了。&lt;/p&gt;
&lt;h4 id=&#34;2使用-msvcrt-版本的-mingw-并且不使用和-msvcrt-不支持的-c-功能&#34;&gt;2.使用 msvcrt 版本的 MinGW 并且不使用和 msvcrt 不支持的 C++ 功能&lt;/h4&gt;
&lt;p&gt;如果不想用 VC6.0 这种停止维护多年的编译器，又想保证兼容性和裁剪体积，那么使用 msvcrt 版本的 MinGW 并且不使用 msvcrt 不支持的 C++ 功能也是一种不错的方案。&lt;br&gt;
这种方案下，msvcrt 版本的 MinGW 编译出的 C/C++ 程序和 VC6.0 一样，运行时只有 msvcrt.dll 一个库。&lt;/p&gt;
&lt;h2 id=&#34;2调整编译器参数&#34;&gt;2.调整编译器参数&lt;/h2&gt;
&lt;p&gt;我想这个不用我多说，指定编译器优化代码和不插入调试信息等属于基本功。&lt;/p&gt;
&lt;h2 id=&#34;3使用压缩壳&#34;&gt;3.使用压缩壳&lt;/h2&gt;
&lt;p&gt;UPX、ASPack 等压缩壳可以压缩程序体积，但会让程序占用额外的内存（因为要把压缩后的程序解压到内存里）和拖慢启动时间（虽然也不至于拖慢太多）。&lt;br&gt;
对于这种方法，我的建议是：按自己的需求来。&lt;/p&gt;
&lt;h1 id=&#34;感想&#34;&gt;感想&lt;/h1&gt;
&lt;p&gt;写完之后再想想，实际上现在真没必要这么抠&amp;hellip;&amp;hellip;这年头 5M 以下的小工具基本都在用户的可接受范围内吧，而未经压缩的 20M&amp;hellip;30M 的可执行文件压缩一下也基本能到 5M 以下吧。&lt;/p&gt;
- https://anyicomplex.github.io/posts/ultimate-trimming-for-c-cpp-programs-size/ - 2021 - 2022 © anyicomplex</description>
        </item>
    
    
    
        <item>
        <title>在 Linux 下编写和编译 win32 程序</title>
        <link>https://anyicomplex.github.io/posts/writing-and-compiling-win32-programs-under-linux/</link>
        <pubDate>Mon, 28 Feb 2022 14:24:36 -0500</pubDate>
        
        <guid>https://anyicomplex.github.io/posts/writing-and-compiling-win32-programs-under-linux/</guid>
        <description>安怡的博客 https://anyicomplex.github.io/posts/writing-and-compiling-win32-programs-under-linux/ -&lt;p&gt;&lt;strong&gt;本文所说的 win32 是中国大陆程序员圈子对 winapi 的俗称，不是特指 32 位 winapi（别说 64 位了，自从 32 位 winapi 出现，对早期 16 位的 winapi 我们也这么叫）。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;可行性&#34;&gt;可行性&lt;/h1&gt;
&lt;p&gt;得益于 MinGW（Minimalist GNU for Windows）这个项目，只要不涉及到比较高层次的封装（MFC、WPF等），是完全可行的。（实际上也有各种奇技淫巧使用 MFC 和 WPF，但我不建议那么做，如果真要那么做，在 Wine 下使用 MSVC 也许会更好一点）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当然，因为原 MinGW 项目不支持 64 位，我这里说的 MinGW 都是指 &lt;a href=&#34;https://www.mingw-w64.org&#34;&gt;MinGW-w64&lt;/a&gt;（和原 MinGW 不是同一个项目）。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;
&lt;p&gt;一般而言，主流 Linux 发行版的软件源都会包含 MinGW 相关的软件包，当然，如果没有，或者需要官方源已有软件包以外的功能，也可以自己去官网下载源码和编译好的可执行文件什么的～&lt;strong&gt;详情请参阅  &lt;a href=&#34;https://www.mingw-w64.org/downloads/&#34;&gt;https://www.mingw-w64.org/downloads/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我现在使用的操作系统是 Fedora 35，是参考这篇&lt;a href=&#34;https://docs.fedoraproject.org/en-US/packaging-guidelines/MinGW/&#34;&gt;官方文档&lt;/a&gt;装的。&lt;br&gt;
&lt;strong&gt;除非官方文档太烂，否则还是建议跟着官方文档来。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;“MinGW 不生产工具链，只是 GNU 工具链的搬运工。”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;除了命令的名称不同以外，其他都和 GNU 工具链一样，举个例子，编译 64 位 C 语言程序，把 &lt;code&gt;gcc&lt;/code&gt; 换成 &lt;code&gt;x86_64-w64-mingw32-gcc&lt;/code&gt; 即可。&lt;br&gt;
除编译器以外，MinGW 里还有不少其他的工具，用于和编译器配套使用（Linux 原装的 GNU 构建工具无法和 MinGW 编译器配套使用，或者需要额外配置）。&lt;strong&gt;配置 IDE 或文本编辑器的时候，一定要把全套工具都换成 MinGW 的！&lt;/strong&gt;&lt;br&gt;
至于具体有哪些工具，我这里就不一一列举了，&lt;strong&gt;安装好后可以在 &lt;code&gt;/usr/bin&lt;/code&gt; 目录下搜索 &lt;code&gt;mingw&lt;/code&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;头文件和库文件等可以在 &lt;code&gt;/usr/x86_64-w64-mingw32&lt;/code&gt; 和 &lt;code&gt;/usr/i686-w64-mingw32&lt;/code&gt; 目录下找到。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;感想&#34;&gt;感想&lt;/h1&gt;
&lt;p&gt;不使用 MFC 的 win32 开发太痛苦了&amp;hellip;&amp;hellip;&lt;/p&gt;
- https://anyicomplex.github.io/posts/writing-and-compiling-win32-programs-under-linux/ - 2021 - 2022 © anyicomplex</description>
        </item>
    
    
    
        <item>
        <title>无题</title>
        <link>https://anyicomplex.github.io/posts/untitled-1/</link>
        <pubDate>Fri, 25 Feb 2022 06:26:14 -0500</pubDate>
        
        <guid>https://anyicomplex.github.io/posts/untitled-1/</guid>
        <description>安怡的博客 https://anyicomplex.github.io/posts/untitled-1/ -&lt;p&gt;希望乌克兰人民能平安度过这次劫难。&lt;br&gt;
希望战争能早点结束，不要扩大成世界大战。&lt;br&gt;
为死难者默哀。&lt;/p&gt;
- https://anyicomplex.github.io/posts/untitled-1/ - 2021 - 2022 © anyicomplex</description>
        </item>
    
    
    
        <item>
        <title>博客翻新 3</title>
        <link>https://anyicomplex.github.io/posts/blog-refurbishment-3/</link>
        <pubDate>Sun, 20 Feb 2022 11:30:53 -0500</pubDate>
        
        <guid>https://anyicomplex.github.io/posts/blog-refurbishment-3/</guid>
        <description>安怡的博客 https://anyicomplex.github.io/posts/blog-refurbishment-3/ -&lt;p&gt;上次写博客的时候发现高亮代码的背景是米黄色，我不喜欢这个颜色，所以改了。&lt;br&gt;
然后是更新了一下主题的版本。&lt;/p&gt;
- https://anyicomplex.github.io/posts/blog-refurbishment-3/ - 2021 - 2022 © anyicomplex</description>
        </item>
    
    
    
        <item>
        <title>Xlib 编程注意事项 1</title>
        <link>https://anyicomplex.github.io/posts/xlib-programming-notes-1/</link>
        <pubDate>Sun, 20 Feb 2022 11:02:21 -0500</pubDate>
        
        <guid>https://anyicomplex.github.io/posts/xlib-programming-notes-1/</guid>
        <description>安怡的博客 https://anyicomplex.github.io/posts/xlib-programming-notes-1/ -&lt;ul&gt;
&lt;li&gt;谨慎使用 &lt;code&gt;XGrabPointer&lt;/code&gt;，使用前一定要做好强制退出程序的准备（今天我被坑到了，还不止一次QAQ）&lt;/li&gt;
&lt;/ul&gt;
- https://anyicomplex.github.io/posts/xlib-programming-notes-1/ - 2021 - 2022 © anyicomplex</description>
        </item>
    
    
  </channel>
</rss> 